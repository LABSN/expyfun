name: 'tests'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  job:
    name: ${{ matrix.os }} ${{ matrix.kind }}
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        kind: ['pip']
        include:
          - os: 'macos-latest'
            kind: 'conda'
            python: '3.10'
          - os: 'ubuntu-latest'
            kind: 'old'
            python: '3.8'
    env:
      _EXPYFUN_SILENT: 'true'
      SOUND_CARD_BACKEND: 'pyglet'
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: pyvista/setup-headless-display-action@main
        with:
          qt: true
          pyvista: false
      - uses: LABSN/sound-ci-helpers@v1
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        if: ${{ matrix.kind != 'conda' }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: 'test'
          python-version: ${{ matrix.python }}
          environment-file: 'environment_test.yml'
        name: 'Setup conda'
        if: ${{ matrix.kind == 'conda' }}
      - run: python -m pip install --upgrade pip setuptools wheel
      - run: python -m pip install sounddevice rtmixer "pyglet<1.4" matplotlib
        if: ${{ matrix.kind == 'old' }}
      - run: python -m pip install --upgrade sounddevice rtmixer "pyglet<1.6" pyglet_ffmpeg scipy matplotlib pandas h5py coverage mne numpydoc pytest pytest-cov pytest-timeout pillow joblib codecov
        if: ${{ matrix.kind != 'old' }}
      - run: sounddevice
      - run: python -c "import pyglet; print(pyglet.version)"
      - run: python -c "import matplotlib.pyplot as plt"
      - run: pip install -ve .
      - run: python -c "import expyfun; expyfun._utils._has_video(raise_error=True)"
      - run: pytest --tb=short --cov=expyfun --cov-report=xml expyfun
      - uses: codecov/codecov-action@v1
        if: success()
